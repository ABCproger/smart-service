// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartService.Core.Database;

#nullable disable

namespace SmartService.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    partial class BaseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SmartService.Core.Database.Entities.EquipmentPlacementContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EquipmentUnits")
                        .HasColumnType("int")
                        .HasColumnName("equipment_units");

                    b.Property<string>("ProcessEquipmentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("process_equipment_code");

                    b.Property<string>("ProductionFacilityCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("production_facility_code");

                    b.HasKey("Id")
                        .HasName("pk_equipment_placement_contracts");

                    b.HasIndex("ProcessEquipmentCode")
                        .HasDatabaseName("ix_equipment_placement_contracts_process_equipment_code");

                    b.HasIndex("ProductionFacilityCode")
                        .HasDatabaseName("ix_equipment_placement_contracts_production_facility_code");

                    b.ToTable("equipment_placement_contracts");
                });

            modelBuilder.Entity("SmartService.Core.Database.Entities.ProcessEquipment", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("code");

                    b.Property<double>("Area")
                        .HasColumnType("float")
                        .HasColumnName("area");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Code")
                        .HasName("pk_process_equipments");

                    b.ToTable("process_equipments");
                });

            modelBuilder.Entity("SmartService.Core.Database.Entities.ProductionFacility", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<double>("StandardArea")
                        .HasColumnType("float")
                        .HasColumnName("standard_area");

                    b.HasKey("Code")
                        .HasName("pk_production_facilities");

                    b.ToTable("production_facilities");
                });

            modelBuilder.Entity("SmartService.Core.Database.Entities.EquipmentPlacementContract", b =>
                {
                    b.HasOne("SmartService.Core.Database.Entities.ProcessEquipment", "ProcessEquipment")
                        .WithMany("EquipmentPlacementContracts")
                        .HasForeignKey("ProcessEquipmentCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_equipment_placement_contracts_process_equipments_process_equipment_code");

                    b.HasOne("SmartService.Core.Database.Entities.ProductionFacility", "ProductionFacility")
                        .WithMany("EquipmentPlacementContracts")
                        .HasForeignKey("ProductionFacilityCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_equipment_placement_contracts_production_facilities_production_facility_code");

                    b.Navigation("ProcessEquipment");

                    b.Navigation("ProductionFacility");
                });

            modelBuilder.Entity("SmartService.Core.Database.Entities.ProcessEquipment", b =>
                {
                    b.Navigation("EquipmentPlacementContracts");
                });

            modelBuilder.Entity("SmartService.Core.Database.Entities.ProductionFacility", b =>
                {
                    b.Navigation("EquipmentPlacementContracts");
                });
#pragma warning restore 612, 618
        }
    }
}
